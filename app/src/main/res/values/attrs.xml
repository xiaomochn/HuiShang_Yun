<?xml version="1.0" encoding="utf-8"?>
<resources>
    
    <declare-styleable name="RoundAngleImageView">
	<attr name="roundWidth" format="dimension" />
	<attr name="roundHeight" format="dimension" />
 	</declare-styleable>

    <!-- switch图片和字符串风格声明 -->
    <declare-styleable name="Switch">

        <!-- Drawable to use as the "thumb" that switches back and forth. -->
        <attr name="thumb" format="reference" />
        <!-- Drawable to use as the "track" that the switch thumb slides within. -->
        <attr name="track" format="reference" />
        <!-- Text to use when the switch is in the checked/"on" state. -->
        <attr name="textOn" format="reference" />
        <!-- Text to use when the switch is in the unchecked/"off" state. -->
        <attr name="textOff" format="reference" />
        <!-- Amount of padding on either side of text within the switch thumb. -->
        <attr name="thumbTextPadding" format="dimension" />
        <!-- TextAppearance style for text displayed on the switch thumb. -->
        <attr name="switchTextAppearance" format="reference" />
        <!-- Minimum width for the switch component -->
        <attr name="switchMinWidth" format="dimension" />
        <!-- Minimum space between the switch and caption text -->
        <attr name="switchPadding" format="dimension" />
    </declare-styleable>
    <!-- 单独给switch定义一个style，就不用在布局中每次都指定style -->
    <attr name="switchStyle" format="reference" />
    <!-- switch单独文本风格声明，可以不用在style中实现，使用默认即可 -->
    <declare-styleable name="SwitchTextAppearance">

        <!-- Text color. -->
        <attr name="android:textColor" />
        <!-- Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). -->
        <attr name="android:textSize" />
        <!-- Style (bold, italic, bolditalic) for the text. -->
        <attr name="android:textStyle" />
        <!-- Typeface (normal, sans, serif, monospace) for the text. -->
        <attr name="android:typeface" />
        <!-- Color of the text selection highlight. -->
        <attr name="android:textColorHighlight" />
        <!-- Color of the hint text. -->
        <attr name="android:textColorHint" />
        <!-- Color of the links. -->
        <attr name="android:textColorLink" />
    </declare-styleable>
    <!-- 滑动返回style声明 -->
    <declare-styleable name="SwipeBackLayout">
        <attr name="edge_size" format="dimension" />
        <attr name="edge_flag">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
            <enum name="bottom" value="2" />
            <enum name="all" value="3" />
        </attr>
        <attr name="shadow_left" format="reference" />
        <attr name="shadow_right" format="reference" />
        <attr name="shadow_bottom" format="reference" />
    </declare-styleable>

    <attr name="SwipeBackLayoutStyle" format="reference" />
    <!-- SlidingMenu -->
    <declare-styleable name="SlidingMenu">
        <attr name="mode">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <attr name="viewAbove" format="reference" />
        <attr name="viewBehind" format="reference" />
        <attr name="behindOffset" format="dimension" />
        <attr name="behindWidth" format="dimension" />
        <attr name="behindScrollScale" format="float" />
        <attr name="touchModeAbove">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="touchModeBehind">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="shadowDrawable" format="reference" />
        <attr name="shadowWidth" format="dimension" />
        <attr name="fadeEnabled" format="boolean" />
        <attr name="fadeDegree" format="float" />
        <attr name="selectorEnabled" format="boolean" />
        <attr name="selectorDrawable" format="reference" />
    </declare-styleable>
    <!-- ViewPager Indicator -->
    <declare-styleable name="CirclePageIndicator">

        <!-- Whether or not the indicators should be centered. -->
        <attr name="centered" format="boolean" />
        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" format="color" />
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" format="color" />
        <!-- Orientation of the indicator. -->
        <attr name="android:orientation" />
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" format="dimension" />
        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" format="boolean" />
        <!-- Color of the open circles. -->
        <attr name="strokeColor" format="color" />
        <!-- Width of the stroke used to draw the circles. -->
        <attr name="strokeWidth" format="dimension" />
        <!-- View background -->
        <attr name="android:background" />
    </declare-styleable>
    <!-- Style of the circle indicator. -->
    <attr name="vpiCirclePageIndicatorStyle" format="reference" />

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <!-- swipe listview -->
    <declare-styleable name="SwipeListView">
        <attr name="swipeOpenOnLongPress" format="boolean"/>
        <attr name="swipeAnimationTime" format="integer"/>
        <attr name="swipeOffsetLeft" format="dimension"/>
        <attr name="swipeOffsetRight" format="dimension"/>
        <attr name="swipeCloseAllItemsWhenMoveList" format="boolean"/>
        <attr name="swipeFrontView" format="reference"/>
        <attr name="swipeBackView" format="reference"/>
        <attr name="swipeMode" format="enum">
            <enum name="none" value="0"/>
            <enum name="both" value="1"/>
            <enum name="right" value="2"/>
            <enum name="left" value="3"/>
        </attr>
        <attr name="swipeActionLeft" format="enum">
            <enum name="reveal" value="0"/>
            <enum name="dismiss" value="1"/>
            <enum name="choice" value="2"/>
        </attr>
        <attr name="swipeActionRight" format="enum">
            <enum name="reveal" value="0"/>
            <enum name="dismiss" value="1"/>
            <enum name="choice" value="2"/>
        </attr>
        <attr name="swipeDrawableChecked" format="reference"/>
        <attr name="swipeDrawableUnchecked" format="reference"/>
    </declare-styleable>

    <!-- SlidingLayer -->
    <declare-styleable name="SlidingLayer">
        <attr name="shadow_drawable" format="boolean" />
        <attr name="shadow_width" format="dimension" />
        <attr name="close_on_tapEnabled" format="boolean" />
        <attr name="stickTo" format="enum">
            <enum name="right" value="-1" />
            <enum name="left" value="-2" />
            <enum name="middle" value="-3" />
        </attr>
    </declare-styleable>
    
    <declare-styleable name="TasksCompletedView">
        <attr name="radius1" format="dimension"/>
        <attr name="strokeWidth1" format="dimension"/>
        <attr name="strokeWidth2" format="dimension"/>
        <attr name="circleColor" format="color"/>
        <attr name="ringColor" format="color"/>
        <attr name="ringColor1" format="color"/>
    </declare-styleable>
    
     <declare-styleable name="JazzyViewPager">
        <attr name="style">
            <enum name="standard" value="0" />
            <enum name="tablet" value="1" />
            <enum name="cubein" value="2" />
            <enum name="cubeout" value="3" />
            <enum name="flipvertical" value="4" />
            <enum name="fliphorizontal" value="5" />
            <enum name="stack" value="6" />
            <enum name="zoomin" value="7" />
            <enum name="zoomout" value="8" />
            <enum name="rotateup" value="9" />
            <enum name="rotatedown" value="10" />
            <enum name="accordion" value="11" />
        </attr>
        <attr name="fadeJazzEnabled" format="boolean" />
        <attr name="outlineEnabled" format="boolean" />
        <attr name="outlineColor" format="color|reference" />
    </declare-styleable>
    <declare-styleable name="ViewPagerIndicator">

        <!-- Style of the circle indicator. -->
        <!-- <attr name="vpiCirclePageIndicatorStyle" format="reference" /> -->
        <!-- Style of the icon indicator's views. -->
        <attr name="vpiIconPageIndicatorStyle" format="reference" />
        <!-- Style of the line indicator. -->
        <attr name="vpiLinePageIndicatorStyle" format="reference" />
        <!-- Style of the title indicator. -->
        <attr name="vpiTitlePageIndicatorStyle" format="reference" />
        <!-- Style of the tab indicator's tabs. -->
        <attr name="vpiTabPageIndicatorStyle" format="reference" />
        <!-- Style of the underline indicator. -->
        <attr name="vpiUnderlinePageIndicatorStyle" format="reference" />
    </declare-styleable>

   <!--  <attr name="centered" format="boolean" /> -->
    <attr name="selectedColor" format="color" />
   <!--  <attr name="strokeWidth" format="dimension" /> -->
    <attr name="unselectedColor" format="color" />

   <!--  <declare-styleable name="CirclePageIndicator">

        Whether or not the indicators should be centered.
        <attr name="centered" />
        Color of the filled circle that represents the current page.
        <attr name="fillColor" format="color" />
        Color of the filled circles that represents pages.
        <attr name="pageColor" format="color" />
        Orientation of the indicator.
        <attr name="android:orientation" />
        Radius of the circles. This is also the spacing between circles.
        <attr name="radius" format="dimension" />
        Whether or not the selected indicator snaps to the circles.
        <attr name="snap" format="boolean" />
        Color of the open circles.
        <attr name="strokeColor" format="color" />
        Width of the stroke used to draw the circles.
        <attr name="strokeWidth" />
        View background
        <attr name="android:background" />
    </declare-styleable> -->


    <!-- SlidingLayer -->
    <!-- <declare-styleable name="SlidingLayer">
        <attr name="shadow_drawable" format="boolean" />
        <attr name="shadow_width" format="dimension" />
        <attr name="close_on_tapEnabled" format="boolean" />
        <attr name="stickTo" format="enum">
            <enum name="auto" value="0" />
            <enum name="right" value="-1" />
            <enum name="left" value="-2" />
            <enum name="middle" value="-3" />
        </attr>
    </declare-styleable> -->
    <!-- swipe listview -->
   <!--  <declare-styleable name="SwipeListView">
        <attr name="swipeOpenOnLongPress" format="boolean" />
        <attr name="swipeAnimationTime" format="integer" />
        <attr name="swipeOffsetLeft" format="dimension" />
        <attr name="swipeOffsetRight" format="dimension" />
        <attr name="swipeCloseAllItemsWhenMoveList" format="boolean" />
        <attr name="swipeFrontView" format="reference" />
        <attr name="swipeBackView" format="reference" />
        <attr name="swipeMode" format="enum">
            <enum name="none" value="0" />
            <enum name="both" value="1" />
            <enum name="right" value="2" />
            <enum name="left" value="3" />
        </attr>
        <attr name="swipeActionLeft" format="enum">
            <enum name="reveal" value="0" />
            <enum name="dismiss" value="1" />
        </attr>
        <attr name="swipeActionRight" format="enum">
            <enum name="reveal" value="0" />
            <enum name="dismiss" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="PullToRefresh">

        A drawable to use as the background of the Refreshable View
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        A drawable to use as the background of the Header and Footer Loading Views
        <attr name="ptrHeaderBackground" format="reference|color" />

        Text Color of the Header and Footer Loading Views
        <attr name="ptrHeaderTextColor" format="reference|color" />

        Text Color of the Header and Footer Loading Views Sub Header
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        Mode of Pull-to-Refresh that should be used
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            These last two are depreacted
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        Whether the Indicator overlay(s) should be used
        <attr name="ptrShowIndicator" format="reference|boolean" />

        Drawable to use as Loading Indicator. Changes both Header and Footer.
        <attr name="ptrDrawable" format="reference" />

        Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable.
        <attr name="ptrDrawableStart" format="reference" />

        Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable.
        <attr name="ptrDrawableEnd" format="reference" />

        Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh.
        <attr name="ptrOverScroll" format="reference|boolean" />

        Base text color, typeface, size, and style for Header and Footer Loading Views
        <attr name="ptrHeaderTextAppearance" format="reference" />

        Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        Style of Animation should be used displayed when pulling.
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        Whether the user can scroll while the View is Refreshing
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
       
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
       
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        BELOW HERE ARE DEPRECEATED. DO NOT USE.
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable> -->

    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
        <attr name="border_overlay" format="boolean" />
    </declare-styleable>


    <declare-styleable name="roundedimageview">
        <attr name="border_thickness" format="dimension" />
        <attr name="border_inside_color" format="color" />
        <attr name="border_outside_color" format="color"></attr>
    </declare-styleable>

</resources>